name: CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Needed for nx-set-shas when run on the main branch
permissions:
  actions: read
  contents: read

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
      - uses: actions/configure-pages@v4
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-
      - run: npm ci
      - uses: nrwl/nx-set-shas@v3
      # This line is needed for nx affected to work when CI is running on a PR
      - run: git branch --track main origin/main
        if: github.event_name == 'pull_request'

      - run: npx nx build tailwind
      - run: npx nx-cloud record -- nx format:check
      - run: npx nx affected -t lint,test,build --parallel=3
        if: github.event_name == 'pull_request'
      - run: npx nx affected -t lint,test --parallel=3
        if: github.event_name != 'pull_request'

      - run: npx nx affected -t build --parallel=3 --exclude=jasonruesch
        if: github.event_name != 'pull_request'
      - run: npx nx build jasonruesch --skip-nx-cache
        if: github.event_name != 'pull_request'
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/jasonruesch
        if: github.event_name != 'pull_request'

  # Deployment job
  deploy:
    if: github.event_name != 'pull_request'
    environment:
      name: staging
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_and_test
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
