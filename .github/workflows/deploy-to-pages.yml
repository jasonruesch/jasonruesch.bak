# This workflow will build and deploy a site to GitHub Pages when a tag is pushed

name: Deploy site to Pages

on:
  push:
    tags: ['jasonruesch-v*']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npx nx build jasonruesch --skip-nx-cache

  deploy:
    environment:
      name: production
      url: https://jasonruesch.github.io
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: cpina/github-action-push-to-another-repository@ssh-deploy-key
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: dist/jasonruesch/
          destination-github-username: 'jasonruesch'
          destination-repository-name: 'jasonruesch.github.io'
          user-email: jason.ruesch@me.com
          commit-message: 'chore(release): $GITHUB_REF_NAME'
          target-branch: main
